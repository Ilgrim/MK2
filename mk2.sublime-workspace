{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"current",
				"current_rule"
			],
			[
				"getg",
				"get_group\t(list.inc)"
			],
			[
				"rcmail",
				"rcmail::write_log"
			],
			[
				"grou",
				"group_id"
			],
			[
				"vcard_",
				"vcard_filename"
			],
			[
				"toa",
				"total_entries"
			],
			[
				"write",
				"write_log"
			],
			[
				"webdav_abook",
				"webdav_abook_user_url"
			],
			[
				"u",
				"uid\t(rcube_webdav_addressbook.php)"
			],
			[
				"webdav_aboo",
				"webdav_abook_dir"
			],
			[
				"sande",
				"rcube_sandetel"
			],
			[
				"uploadf",
				"uploadform\t(app.js)"
			],
			[
				"back",
				"background-position"
			],
			[
				"upload_pr",
				"upload_progress_start\t(app.js)"
			],
			[
				"upload_progres",
				"upload_progress_time\t(app.js)"
			],
			[
				"async",
				"async_upload_form_consigna"
			],
			[
				"rcube",
				"rcube_sandetel"
			],
			[
				"wri",
				"write_log"
			],
			[
				"prefsf",
				"prefs_file"
			],
			[
				"rcu",
				"rcube_sandetel"
			],
			[
				"sqm",
				"sqm_bookmarks_file"
			],
			[
				"bookmar",
				"bookmark_a"
			],
			[
				"sq",
				"sqm_bookmarks_file"
			],
			[
				"home",
				"homeDirectory"
			],
			[
				"pass",
				"pass_caducado"
			],
			[
				"permiso",
				"permiso_organismo"
			],
			[
				"labeled",
				"labeledUri"
			],
			[
				"nusoap",
				"nusoap_client"
			],
			[
				"inline",
				"inline-block"
			],
			[
				"num",
				"numGroups"
			],
			[
				"Hash",
				"HashMap"
			],
			[
				"dir",
				"dirEscritura"
			],
			[
				"modificaAtribu",
				"modificaAtributoGUIA"
			],
			[
				"modificaAtri",
				"modificaAtributoGUIA"
			],
			[
				"ExcepcionConex",
				"ExcepcionConexionYaAbierta"
			],
			[
				"codi",
				"codides"
			],
			[
				"marcaGUIa",
				"marcaGUIAformateaSalida"
			],
			[
				"ape",
				"apellido2"
			],
			[
				"usuariosEncontradosReservad",
				"usuariosEncontradosReservadosDeMiTipo"
			],
			[
				"usuariosEnco",
				"usuariosEncontradosReservadosGUIA"
			],
			[
				"usuariosEncontradosGUIA",
				"usuariosEncontradosReservadosGUIA"
			],
			[
				"usuarioEncontradosRe",
				"usuariosEncontradosReservadosGUIA"
			],
			[
				"codide",
				"codide"
			],
			[
				"trasladaUsuario",
				"trasladaUsuarioLDAPdn"
			],
			[
				"Baja",
				"quitaEstadoBaja"
			],
			[
				"usuariosEn",
				"usuariosEncontradosReservadosGUIA"
			],
			[
				"usuariosEncontradosReser",
				"usuariosEncontradosReservadosGUIA"
			],
			[
				"marcaUid",
				"marcarUidGUIA"
			],
			[
				"fadeout",
				"fade_out_bucle"
			],
			[
				"in",
				"in_KeyPressed"
			],
			[
				"use_pla",
				"use_placement_x"
			],
			[
				"music",
				"music_play"
			],
			[
				"PLA",
				"PLAYER_VX_MIN"
			],
			[
				"pobjs",
				"pobjs_starter"
			],
			[
				"ppu",
				"ppu_wait_nmi"
			],
			[
				"gp",
				"gp_addr"
			],
			[
				"PLAYER",
				"PLAYER_VY_JUMP_MAX"
			],
			[
				"PLAY",
				"PLAYER_VY_FALLING_MAX"
			],
			[
				"sp_",
				"sp_PrintAtInv"
			],
			[
				"TWO_SETS",
				"TWO_SETS_MAPPED"
			],
			[
				"TWO_SET",
				"TWO_SETS_SEL"
			],
			[
				"PSGSFX",
				"PSGSFXPlay"
			],
			[
				"PSG",
				"PSGSFXPlay"
			],
			[
				"MS_TYPE_",
				"MS_TYPE_SINGLE"
			],
			[
				"SG",
				"SG_setTile"
			],
			[
				"SG_",
				"SG_setNextTileatXY"
			],
			[
				"MS",
				"MS_MAX"
			],
			[
				"UNSA",
				"UNSAFE_SG_copySpritestoSAT"
			],
			[
				"UNS",
				"UNSAFE_SG_copySpritestoSAT"
			],
			[
				"MS_",
				"MS_TYPE_EMPTY"
			],
			[
				"pgo",
				"pgotten_uwol"
			],
			[
				"pgt",
				"pgtmx_meemaid"
			],
			[
				"PSTAT_",
				"PSTATE_NAKED"
			],
			[
				"draw_",
				"draw_game_tile"
			],
			[
				"FAN",
				"FANTY_MAXV"
			],
			[
				"show_",
				"show_coins_vs"
			],
			[
				"GP_",
				"GM_2P_VS"
			],
			[
				"PSTATE",
				"PSTATE_DEAD"
			],
			[
				"pf",
				"pflickering"
			],
			[
				"PF",
				"PFACING_LEFT"
			],
			[
				"A",
				"TOP_ADJUST"
			],
			[
				"TI_B",
				"TI_BACKGROUNDS"
			],
			[
				"update",
				"update_list_index"
			],
			[
				"SMS_setTile",
				"SMS_setTileatXY"
			],
			[
				"VDPS",
				"VDPStatusPort"
			],
			[
				"overfl",
				"VDPSpriteOverflow"
			],
			[
				"fra",
				"frame_counter"
			],
			[
				"PLAYER_",
				"PLAYER_GENITAL"
			],
			[
				"PLAYER_HA",
				"PLAYER_HAS_JUMP"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "MT Engine MK2 v 0.90b (Ramiro R Edition)\n========================================\n\nPensaba rehacer Ramiro con lo mínimo, pero estoy haciendo algunas adiciones bastante interesantes. Serán pocas y no es un juego nuevo, así que lo pongo como 0.90b en vez de 0.91. Además, más que nada estoy corrigiendo tela de pequeñas cagadas que he introducido mientras hacía la 0.90 (es genial tener un juego de motor diferente para probar qué has roto con lo que has metido para otro motor), que son un montón.\n\nCambiar el comportamiento de una posición del mapa desde scripting\n------------------------------------------------------------------\n\nA veces pongo títulos tan largos que casi no hace falta descripción... Pues eso mismo. Cambiarle el comportamiento al vuelo a un tile:\n\n```\n\tSET BEH (x, y) = b\n```\n\n#define ENABLE_KILL_SLOWLY\n--------------------------\n\nReintroduce esta característica que metimos en la v4.5 para Ramiro y que desapareció cuando reiniciamos a la 3.1 y ampliamos para sacar la 3.99 [de MK1].\n\nSe trata de que los tiles de tipo 3 quitan energía tras cierto tiempo. Este tiempo se controla con un número de ticks y cuántos frames dura cada tick:\n\n```c\n\t#define KILL_SLOWLY_GAUGE\t\tT \t\t// # of ticks before kill\n\t#define KILL_SLOWLY_FRAMES\t\tF \t\t// # of frames per tick\n```\n\nAdemás podemos activar o desactivar esto durante la ejecución del juego. Cuando la característica está desactivada, OJETE, los tiles 3 quitan vida al instante. Lo podemos controlar usando el flag que definamos con:\n\n```c\n\t#define KILL_SLOWLY_ON_FLAG \tN\n```\n\nMejoras para juegos que usen energía en vez de vidas\n----------------------------------------------------\n\nLlevamos años tratándolos igual pero cada uno tiene su castaña. Esto lo tengo que pensar bastante mejor porque seguro que puedo refactorizar el código y conseguir ahorros: por lo general, si tu juego va por vidas y cuando te matan sólo pierdes una vida el código es más sencillo.\n\nDe todos modos he tenido que meter de forma rápida una pequeña modificación que consideraremos temporal, porque está cogida un poco con pinzas. \n\nPara Ramiro necesitaba tener la posibilidad de que los enemigos lineales quitasen una cantidad de vida y los voladores una diferente, así que me he limitado a definir eso mismo...\n\n```c\n\t#define CUSTOM_HIT\t\n```\n\nActiva la característica de que cada tipo de enemigo quite una cantidad diferente de vida.\n\n```c\n\t#define PATROLLERS_HIT\t\t\tX\n```\n\nDefine cuántos puntos de vida quitan los enemigos lineales.\n\n```c\n\t#define FANTIES_HIT \t\t\tX\n```\n\nDefine cuántos puntos de vida quitan los enemigos voladores.\n\nPor ahora el resto de los tipos de enemigo (y los pinchos) no están controlados y quitan los puntos de vida que diga `CUSTOM_HIT_DEFAULT`\n\nAdormecer a los fantys\n----------------------\n\nRamiro podía \"desactivar\" (más bien, \"paralizar\") a los fantys a golpe de comando de script. Para trasladar la funcionalidad he preferido mapear la bandera a un flag, de forma que no hay que ampliar nada y el intérprete del script no crece.\n\n```c\n\t#define FANTIES_NUMB_ON_FLAG\tF\n```\n\nDefiniendo esto, el valor del flag F determinará si los fantys se mueven o no. Si vale 0, los fantys no se mueven.\n\nMejora en la configuración de los efectos de sonido\n---------------------------------------------------\n\nEl tema del sonido en MK1 / MK2 siempre ha sido un poco coñazo: o te tragabas los sonidos por defecto, o cambiarlos era un puto dolor porque te tenías que hartar de recorrer código arriba y abajo para modificar NÚMEROS. Muy mal. No sé por qué no he cambiado esto antes.\n\nAhora sólo hay que irse a definitions.h y cambiar esta lista de constantes por los numeritos de tu set de sonidos (los que apliquen, obviamente):\n\n```c\n\t// Sound effects. Alter here and you are done!\n\t#define SFX_PUSH_BOX\t2\n\t#define SFX_LOCK\t\t8\n\t#define SFX_BREAK_WALL\t10\n\t#define SFX_BREAK_WALL_ANIM 10\n\t#define SFX_SHOOT\t\t9\n\t#define SFX_KILL_ENEMY\t2\n\t#define SFX_ENEMY_HIT\t2\n\t#define SFX_EXPLOSION\t10\n\t#define SFX_CONTAINER\t6\n\t#define SFX_FO_DRAIN\t2\n\t#define SFX_FO_DESTROY\t10\n\t#define SFX_FO_DROP\t\t2\n\t#define SFX_FO_GET\t\t2\n\t#define SFX_JUMP \t\t1\n\t#define SFX_JUMP_ALT \t1\n\t#define SFX_TILE_GET \t5\n\t#define SFX_HITTER_HIT \t2\n\t#define SFX_FALL_HOLE \t9\n\t#define SFX_KS_TICK \t4\n\t#define SFX_KS_DRAIN \t3\n\t#define SFX_REFILL \t\t7\n\t#define SFX_OBJECT \t\t6\n\t#define SFX_KEY \t\t6\n\t#define SFX_AMMO\t\t6\n\t#define SFX_TIME\t\t6\n\t#define SFX_FUEL\t\t6\n\t#define SFX_WRONG \t\t2\n\t#define SFX_INVENTORY \t2\n\t#define SFX_PLAYER_DEATH_BOMB 2\n\t#define SFX_PLAYER_DEATH_COCO 2\n\t#define SFX_PLAYER_DEATH_ENEMY 2\n\t#define SFX_PLAYER_DEATH_SPIKE 3\n\t#define SFX_PLAYER_DEATH_HOLE 10\n\t#define SFX_PLAYER_DEATH_TIME 2\n\t#define SFX_PLAYER_DEATH_LAVA 10\n\t#define SFX_ENDING_LAME_1 2\n\t#define SFX_ENDING_LAME_2 3\n\t#define SFX_ENDING_LAME_WIN 6\n\t#define SFX_ENDING_LAME_LOSE 10\n```\n\nScript para pasar de .ene formato antiguo a .ene formato nuevo\n--------------------------------------------------------------\n\nPor ahora es muy (demasiado) básico, pero los que me conocéis sabéis que no me suelo rayar más de la cuenta. Ahora mismo hace lo que necesitaba: cambiar los enemigos de tipo (viejo) 1, 2, 3, 4, y 6 en enemigos con el formato nuevo. Los que salían en Ramiro, vaya.\n\nLo tenéis en /utils/enemsupdater.exe. El código fuente está, como siempre, en  /utils/src, para que lo ampliéis si queréis y lo necesitáis.\n\nMT Engine MK2 v 0.90 (Key To Time Edition)\n==========================================\n\nEl motor de vista genital está vergonzósamente abandonado en MK2, y nos hemos propuesto ampliarlo y completarlo para que las cosas que hay en el\nde vista lateral que hemos ido añadiendo poco a poco desde Ninjajar funcionen también en vista genital. Son muchas cosas, así que:\n\n#define DISABLE_HOTSPOTS\n------------------------\n\nElimina todo el código que inicializa, dibuja y comprueba los hotspots. Se puede liberar entre 600 y 700 bytes así. Si no los usas, es un win.\n\nNew Genital\n-----------\n\nLa vieja vista genital no está demasiado preparada para juegos con perspectiva diédrica (aunque no hemos parado de hacerlos), y ahora que\nqueremos tener plataformas móviles y saltos necesitamos otro tipo de detección de colisiones diferente.\n\nTenemos dos cambios:\n\nEl viejo \"PLAYER_MOGGY_STYLE\" es ahora \"PLAYER_GENITAL\". Usando esta directiva la vista genital será como siempre.\n\nPara activar además la nueva colisión y toda la gaita es  necesario, además, activar\n\n```c\n#define PLAYER_NEW_GENITAL\n```\n\nCon esta directiva la vista genital se considerará en perspectiva diédrica y será el \"cimiento\" sobre el que se construirá el motor 2.5D en un futuro.\n\nBOUNDING_BOX_TINY_BOTTOM\n------------------------\n\nLa caja que controla la colisión con el escenario es de 8x2 si se define esta directiva en lugar de las demás. Funciona mejor con PLAYER_NEW_GENITAL si hay caídas al vacío y cosas así.\n\nUSE_TWO_BUTTONS\n---------------\n\nEsta directiva se activará automáticamente si el jugador elige vista genital y poder saltar.\n\nDie & Respawn\n-------------\n\nEsta función no tiene ningún sentido por sí misma en el motor de vista genital, así que por lo general se ignorará.\n\nSin embargo, se activará de forma automática si se activa el motor de salto en la vista genital, ya que si se cae a un agujero habrá que reposicionar al personaje.\n\nEn vista genital, la posición \"segura\" se almacenará en dos supuestos:\n\n- El jugador pulsa la tecla de salto.\n- El jugador entra en una nueva pantalla *y* está \"posado\"\n\nConveyors\n---------\n\nEn la vista lateral, levantar el bit 5 (OR 32) de un behaviour hacía que el tile fuese una cinta transportadora. La dirección de la cinta la controlaba el bit 1.\n\nEn vista genital, esto es algo diferente. El bit 5 sigue activando el comportamiento de cinta transportadora, pero la dirección la controlan los bits 1 y 2, de modo que:\n\n```c\n\t// C  DD\n\t// 100000 = 32 = conveyor up\n\t// 100010 = 34 = conveyor down\n\t// 100100 = 36 = conveyor left\n\t// 100110 = 38 = conveyor right\n```\n\nLa detección de las plataformas móviles se realiza con el pixel central de la fila inferior del cuadro del sprite del protagonista, por lo que\nfunciona sólo con `PLAYER_NEW_GENITAL`.\n\nSe activan igual que los de vista lateral: \n\n```c\n\t#define ENABLE_CONVEYORS\n```\n\nPlataformas móviles\n-------------------\n\nTambién para `PLAYER_NEW_GENITAL`. Arrastran igual que los conveyors (por el mismo punto). Las plataformas pueden tener cualquier velocidad y ser verticales, horizontales o incluso diagonales.\n\nHay que tener cuidado porque si no quieres plataformas en la vista genital hay que #define DISABLE_PLATFORMS ! Esto es diferente a como era antes.\n\nsprite_e\n--------\n\nSe añade soporte para ampliar el spriteset a partir de los 16 de siempre. Lo he hecho de forma muy sencilla para dar mucha flexibilidad, pero eso siempre implica algo de trabajo sucio. \n\nPor lo pronto los voy a emplear para las caídas al vacío y tal.\n\nEn 48K: No hay que hacer nada, simplemente tenerlos en sprites.png (debe ser de 256 pixels de ancho, pero ahora puede tener más de 32 de alto para hacer sitio a más sprites) y pasar el número correcto a sprcnv.exe para convertir. Los sprites extra (todas sus columnas y su mierda) se colocan a partir de una etiqueta sprite_e, habrá que calcular a pelo las direcciones reales (cada columna son 48 bytes, cada sprite 144).\n\nEn 128K: [aún hay que definir la conversión y ampliar los conversores] se hace sitio tras el spriteset principal en la memoria baja, pero para que el motor sepa cuanto sitio tiene que dejar hay que definir en config.h la nueva directiva\n\n```c\n\t#define EXTRA_SPRITES 2\n```\n\nDonde decimos cuántos hay. Si no vamos a usar, no definimos la directiva.\n\nCaídas al vacío\n---------------\n\nUn tile con behaviour 3 en PLAYER_NEW_GENITAL se considera un \"vacío\" por el que se puede caer (y perder una vida).\n\nPara que el engine los soporte, hay que definir \n\n```c\n\t#define ENABLE_HOLES\n```\n\nLa detección no es inmediata, ocurre con un par de frames de retraso para que el jugador pueda cambiar de plataforma móvil sin morir y sin tener  que saltar.\n\nSe usa dos prames extra que deben estar, en principio, en la dirección apuntada por `FALLING_FRAME` (por ejemplo, `sprite_e`) y `FALLING_FRAME + 144` (o sea, el sprite siguiente)\n\nSaltos genitales\n----------------\n\nSi se emplea el modo `PLAYER_NEW_GENITAL` y se activa `PLAYER_HAS_JUMP` el jugador podrá saltar. Este modo activa automáticamente `USE_TWO_BUTTONS` por lo que la tecla de salto es N en el modo principal y [ya veré en el modo para siesos].\n\nLos saltos genitales añaden automáticamente un sprite de 16x8 para la sombra del personaje y por tanto necesitan 7 bloques de sprites más.\n\nLa fuerza del salto se controla con las directivas para el salto que se usan en la vista lateral.\n\nAX y RX modificables\n--------------------\n\nEl Behaviour 64 (bit 6) define un tile como \"modificador\" de AX y RX. Si el jugador pisa este tile, AX y RX obtienen los valores de las directivas:\n\n```c\n\t#define PLAYER_AX_ALT\t\t\t16 \n\t#define PLAYER_RX_ALT\t\t\t16 \n```\n\nPara que esto funcione hay que activar \n\n```c\n\t#define ENABLE_BEH_64\n```\n\nen modo `PLAYER_NEW_GENITAL`\n\nMapa cíclico\n------------\n\n`PLAYER_CYCLIC_MAP` invalida `PLAYER_CHECK_MAP_BOUNDARIES`. Ahora, al salirse del mapa, se aparece por el lado contrario. Genial para hacer desiertos como el de K2T :-D\n\n\"Subscripts\" (o sea, los \"niveles\" en el script)\n------------------------------------------------\n\nEsto no es esencialmente nuevo ya que está disponible desde Ninjajar!, pero ahora es mucho mejor.\n\nComo ya se sabe, en juegos multinivel puedes configurar un script para cada nivel de forma muy sencilla. Pones todos los scripts seguidos en tu archivo de scripts y los separas con `END_OF_LEVEL`.\n\nAl generar el intérprete (en concreto, en el archivo msc-config.h), msc3 crea una serie de constantes con la dirección de inicio de cada uno de los scripts contenidos en el archivo fuente de scripts: SCRIPT_N para el script N-ésimo del archivo.\n\nEsto funciona bien y tal y cual, pero a veces es mejor tener más control y más legibilidad, sobre todo porque los proyectos multi-nivel pueden ser un poco más complejos y es más fácil perder el norte y cometer errores.\n\nLo que hemos hecho es añadir la posibilidad de nombrar de forma \"custom\" cada subscript, de forma que controlamos desde el propio fuente del script cómo se llamará la constante que apunte al principio de dicho subscript en el binario. Esto se hace con el comando:\n\n```\nLEVELID xxxxx\n```\n\nCon \"xxxxx\" un literal alfanumérico, que colocaremos al principio de cada subscript de nivel (se puede colocar en cualquier sitio, pero mejor ser  ordenados - esto es para hacer más \"legible\" el tema, en general, así que no lo ofusquemos).\n\nSubtilesets\n-----------\n\nSoporte inicial para subtilesets. Son bundles que contienen 16 tiles (64 chars, comprimidos), sus atributos (64 bytes, comprimidos) y su array de  comportamientos (16 bytes, comprimidos). Se usan para sustituir la primera, segunda o tercera tira de tiles de un tileset al vuelo. Pueden cargarse desde un EXTERN o usar el manejador de niveles, etc. \n\nCon la directiva\n\n```c\n\t#define ENABLE_SUBTILESETS\t\n```\n\nSe activa la función \"load_subtileset\" que podemos llamar desde donde queramos (desde nuestra función de EXTERN o desde modificaciones custom)para cargar un subtileset. Los parámetros son:\n\n```c\n\tunsigned char load_subtileset (unsigned char res, unsigned char n)\n```\n\nDonde \"res\" es el número de recurso de librarian y \"n\" es 0, 1 o 2 dependiendo del subtileset que queramos sustituir.\n\nMap Attributes\n--------------\n\nAunque en un futuro se ampliará con más funcionalidades, por el momento se trata de un array de enteros que define qué subtileset se emplea en cada pantalla, con un número de 1 al nº de tilesets que haya. Por el momento, esto sólo puede usarse en juegos multinivel para 128K (la adaptación para juegos de un solo nivel es sencilla, pero habría que hacerla).\n\nEl subtileset empleado por esta funcionalidad es siempre el número 1, o sea, los tiles del 16 al 31.\n\nLos arrays se crean en archivos de texto que se pasan a levelbuilder para que los incluya en el binario del juego. Se trata sencillamente de una lista con `MAP_W*MAP_H` valores separados por comas. Cada valor corresponde a una pantalla, en orden de fila. \n\nA la hora de construir tu juego, en el librarian, deberás añadir los subtilesets justo después del binario del nivel, ya que draw_scr lo que hace  es mirar si necesita un nuevo subtileset y carga el recurso BASE + N, donde BASE es el recurso donde está el nivel y N el número que aparece en el array de atributos.\n\nPara ahorrar espacio, lo mejor es que el archivo png con los tiles que uses para crear el binario de tu fase tenga los tiles del 16 a 31 en negro. Así ahorrarás espacio porque comprimirá mejor y no estarás almacenando duplicados.\n\nSi empleas esta funcionalidad, los niveles que no necesiten cambiar el subtileset 1 deberán estar organizados de la misma manera: binario del nivel y binario del único subtileset justo después.\n\nnosoundplayer.h\n---------------\n\nSoy muy tonto y me da rabia usar temporalmente músicas y sonidos del juego anterior en el nuevo (hablo de 128K). He creado este nuevo \"driver\" que no hace nada, así el juego estará calladito hasta que el músico haga su trabajo.\n\nPara activar, pon un #define NO_SOUND en config.h, esto invalida todo lo demás. (en modo 128K)\n\nPIXEL_SHIFT\n-----------\n\nSirve para los juegos de perspectina \"New Genital\". Hace que los sprites de los  enemigos lineales que no sean plataformas se pinten (y detecten) N pixels más arriba. Así podemos hacer, si nos conviene, que enemigos que se muevan siguiendo trayectorias horizontales caminen \"por el centro\" del tile y no alineados a  este, con lo que la \"sensación de profundidad\" es mucho mejor.\n\nPor ejemplo...\n\n```c\n\t#define PIXEL_SHIFT\t\t\t\t\t8\n```\n\nSET_FIRE_ZONE_TILES\n-------------------\n\nPara que sea más coñazo programar el script, he introducido `SET_FIRE_ZONE_TILES`, donde los parámetros indican un rango en coordenadas de tiles en vez de en píxels. msc3 lo convertirá a un `SET_FIRE_ZONE` normal internamente para que no tengamos que estar haciendo cálculos.\n\nPLAYER_IN_X_TILES / PLAYER_IN_Y_TILES\n-------------------------------------\n\nComo el anterior. Internamente se convierten en PLAYER_IN_X y PLAYER_IN_Y de forma automática, para no tener que andar calculando.\n\nMacros tontos en msc3\n---------------------\n\nBásicamente consiste en definir alias para sustituir una linea completa de código que se use mucho. Se definen en la sección DEFALIAS y emplean el % como identificador. Por ejemplo, imagina que usas un motón\n\n```\n\tEXTERN 0, 0\n```\n\nPara borrar la pantalla. Pero un montón. Pues es mejor (y queda más legible) hacer esto en tu DEFALIAS:\n\n```\n\tDEFALIAS\n\t    ... (cosas)\n\t    %CLS EXTERN 0, 0\n\tEND\n```\n\nY entonces, en vez de EXTERN 0, 0, podrás poner en tu código, simplemente:\n\n```\n\t%CLS\n```\n\nY poco más. Esto puede venir genial porque así podemos darle nombre a los diferentes EXTERN que tengamos y que sean específicos. No es que sea demasiado potente, pero en un futuro intentaré ver cómo parametrizarlo para ya partir la pana del todo.\n\nMT Engine MK2 v 0.89 (Nicanor Edition)\n======================================\n\nEsta versión corresponde al juego \"Nicanor el Profanador\". Incluye una nueva versión de msc3, la 3.92\n\nScripting más fácil con Alias\n-----------------------------\n\nA partir de la versión 3.92 de msc3, puedes obviar la palabra FLAG si usas alias. O sea, que el compilador aceptará\n\n```\nSET $LLAVE = 1\n```\n\ny también \n\n```\nIF $LLAVE = 1\n```\n\nSafe Spot\n---------\n\nSi defines #define `DIE_AND_RESPAWN` en config.h, el jugador, al morir, va a reaparecer en el \"último punto seguro\". Si DIE_AND_RESPAWN está activo, el motor salva la posición (pantalla, x, y) cada vez que nos posamos sobre un tile no traspasable (que no sea un \"floating object\").\n\nPodemos controlar la definición del \"punto seguro\" (safe spot) desde nuestro script. Si decidimos hacer esto (por ejemplo, para definir un \"checkpoint\" de forma manual), es conveniente desactivar que el motor almacene el safe spot de forma automática con:\n\n```c\n#define DISABLE_AUTO_SAFE_SPOT\n```\n\nHagamos o no hagamos esto, podemos definir el safe spot desde el script con estos dos comandos:\n\n```\nSET SAFE HERE\t\t\tEstablece el \"safe spot\" a la posición actual del\n\t\t\t\t\t\tjugador.\n\t\t\t\t\t\t\nSET SAFE n, x, y\t\tEstablece el \"safe spot\" a la pantalla n en las \n\t\t\t\t\t\tcoordenadas (de tile) (x, y).\n```\n\n\nMT Engine MK2 v 0.88c\n=====================\n\nOJO: A partir de esta versión el módulo clásico de manejo de enemigos (`#define USE_OLD_ENEMS`) dejará de estar soportado y dejará de mantenerse. Seguirá ahí, pero es probable que haya muchas cosas que dejen de funcionar. No debe usarse.\n\nTODO: Escribir una aplicación que cambie un archivo .ene del formato viejo al formato nuevo, por si se quiere hacer algún otro rehash de un juego viejo de la Churrera.\n\nEsta versión integra algunas mejoras en el scripting, como las cadenas de decoraciones (ver más abajo) o la espada de Sir Ababol como tipo de HITTER.\n\nNo hay juego con esto, pero sí la demo Espadewr.\n\nDecoraciones\n------------\n\nBásicamente es hacer lo de engine/extraprints.h pero desde el script. Hasta ahora decorábamos las pantallas con tiles extra poniendo ristras de `SET TILE (x, y) = t`. Eso es un coñazo de escribir y mantener y además ocupaba 4 bytes por tile.\n\nAhora podemos definir ristras de tiles en las que todo el conjunto de tiles ocupará `2*n+2`, donde n es el número de tiles. Una buena mejora frente a la original, que ocupaba 4*n bytes.\n\nEl tema es así: basta con incluir esto en el `ENTERING_SCREEN` (o en cualquier sitio que admita comandos: esto sirve para cambiar buenos trozos de la pantalla desde el script y puede venir genial para implementar puzzles chulos que modifiquen el escenario:\n\n```\n\tIF TRUE\n\tTHEN\n\t\tDECORATIONS\n\t\t\tx, y, t\n\t\t\tx, y, t\n\t\t\t...\n\t\tEND\n\tEND\n```\n\nCada linea x, y, t define la posición y el número de un tile extra de decoración. Podéis poner todos los que queráis. \n\nEsto sirve para ahorrar mucha memoria y tener pantallas bien decoradas. Generalmente NO necesitáis los 48 tiles de un tileset extendido a la vez. Siempre hay un grupo de tiles que se repite más. La idea es establecer ese set de tiles como tileset principal (0-15) y colocar los demás como decoraciones.\n\nAdemás, el nuevo map2bin se encarga de detectarlos automáticamente y de generar las lineas de script necesarias.\n\nREENTER, REDRAW, REHASH\n-----------------------\n\nREDRAW ha sido rediseñado para funcionar mejor y más rápidamente. Redibuja de nuevo la pantalla desde el buffer, y esto incluye todo lo que le hayamos colocado antes con SET TILE (x, y) = t.\n\nREHASH vuelve a entrar en la pantalla para, entre otras cosas, inicializar los enemigos. Es necesario si se cambia un enemigo de tipo lineal a tipo volador, ya que hay que inicializar algunas variables.\n\nREENTER, como siempre: es REDRAW + REHASH.\n\nCambiar enemigos y backup de enemigos\n-------------------------------------\n\nAdemás de apagarlos y encenderlos (Ninjajar!), ahora podemos cambiar el tipo de los enemigos. El tipo contiene si dispara o no, qué patrón de movimiento sigue, y qué sprite tiene. \n\n```\nENEMY n TYPE t\t\t\tEstablece el tipo \"t\" para el enemigo \"n\".\n```\n\nSin embargo hay que tener en cuenta que esto es destructivo: si cambiarmos el tipo de un enemigo, el tipo original se perderá para siempre.\n\nEn juegos multinivel esto no es ningún problema porque con descomprimir de nuevo el nivel vamos listos.\n\nPara juegos de un solo nivel, hemos introducido un \"backup de enemigos\" que podemos activar desde config.h usando:\n\n```\n\t#define ENEMY_BACKUP\n```\n\nEl backup ocupa 3 bytes por pantalla y guarda el tipo original de todos los enemigos. \n\nDesde scripting, podemos hacer:\n\n```\nENEMIES RESTORE\t\t\tRestablece a sus valores originales los enemigos de\n\t\t\t\t\t\tla pantalla actual.\n\t\nENEMIES RESTORE ALL\t\tRestaura el tipo de TODOS los enemigos del nivel.\n```\n\nSi sólo necesitas restaurarlos al empezar cada partida, puedes pasar de usar `ENEMIES RESTORE ALL` en el script y activar la directiva `RESTORE_ON_INIT` en config.h\n\n\nEspada\n------\n\nHemos añadido la espada de Sir Ababol 2 como nuevo tipo de hitter (internamente). Por el momento, no es posible disponer de puño y espada en el mismo juego, aunque ya haremos algo para posibilitarlo en un futuro.\n\n```c\n\t#define PLAYER_HAZ_SWORD\n```\n\nEl gráfico de la pantalla se define donde todos los demás: en extrasprites.h\n\n\nMás cosas\n---------\n\nHemos cambiado de todo pero ahora me falla la memoria... A ver, cosas miscelaneas que sí recuerdo:\n\n```c\n\t#define PLAYER_WRAP_AROUND\n```\n\nHay que usarlo sólo si se ha definido `#define PLAYER_CANNOT_FLICK_SCREEN`. Con ambas activas, además de no poder salir de la pantalla, si nos acercamos a un extremo lateral saldremos por el contrario. COMO UWOL ILLO!\n\n\nMT Engine MK2 v 0.88\n====================\n\nEdicioón Leovigildo F. WTF? Es un puto HUEVO DE PASCUA, pero he ampliado el motor en varias direcciones. Algunas pueden ser útiles para otros juegos, y otras no. A ver si me acuerdo de todo:\n\n\nCosas de scripting sin scripting\n--------------------------------\n\nSon cosas que se pueden hacer con scripting, pero al ser sencillas y poder almacenarse los tiestos en un array, si sólo ibas a usar scripting para esto, así te lo ahorras y te caben más cosas. A saber:\n\n**engine/levelnames.h**\n\nPermite ponerle un nombre a cada pantalla. Los nombres tienen que tener una longitud fija y definirse todos en una misma cadena, todos seguidos y en orden. Puedes verlo en el propio levelnames.h, donde también puedes configurar ubicación y color y tal. Para activarlo:\n\n```c\n\t#define ENABLE_LEVEL_NAMES\n```\n\n**engine/extraprints.h**\n\nPermite definir impresiones de tiles extra para cada pantalla. Hay mucha gente que ha usado scripting únicamente para esto (lo que me parece una  pena, si me preguntan). Ahora no hace falta activar el scripting, el  código ocupa muy poco y cada impresión únicamente 2 bytes. Para activarlo: \n\n```c\n#define ENABLE_EXTRA_PRINTS\n```\n\nPara establecer qué se imprimirá, hay que editar extraprints.h. Ahí se define un array por cada pantalla con prints extra. Cada print extra se compone de 2 bytes: \"xy\" y \"tile\". \"xy\" usa 4 bits para X y 4 para Y. Es muy fácil de gestionar en hexadecimal, \"x\" va de 0 a F e \"y\" de 0 a 9. El byte \"tile\" es simplemente el número de tile. La lista se acaba con un  0xff (valor 255).\n\nPor ejemplo, para imprimir un tile 17 en la posición X=10, Y=2, los dos bytes serían 0xA2, 17. Para imprimir un tile 33 en la posición X=5, Y=7 los dos bytes serían 0x57, 33.\n\nPor último, hay otro array *prints con una entrada por cada pantalla del mapa. Si en una pantalla no hay prints extra, se pone un 0. Si sí que  los hay, se pone el array de prints de la pantalla correspondiente.\n\n**engine/sim.h**\n\nSIM significa \"Simple Item Manager\", y sirve para manejar items e inventario sin necesitar scripting para juegos sencillos en los que haya X objetos en Y contenedores por todo el mapa, y el juego se termine cuando los X objetos se han colocado en otros sitios. Sin más.\n\n```c\n\t#define ENABLE_SIM\n```\n\nActivará el SIM. Esto meterá código redundante con el sistema de scripting, por lo que ambos sistemas NO SON COMPATIBLES. Si usas scripting, maneja tus objetos a mano.\n\nEl SIM tiene unas cuantas directivas para configurarlo:\n\n```c\n\t// General\n\t#define SIM_MAXCONTAINERS\t\t6\n\t#define SIM_DOWN\n\t//#define SIM_KEY_M\n\t//#define SIM_KEY_FIRE\n```\n\nLa primera, `SIM_MAXCONTAINERS`, define el máximo número de contenedores (que no de objetos) que habrá en el juego. Un contenedor puede estar vacío o contener un objeto. Juegos en los que haya que poner tres  objetos en otros tres sitios diferentes, por ejemplo, necesitarán seis contenedores: los 3 que contendrán a los objetos, y 3 vacíos con el \"destino final\".\n\nLas tres siguientes, definen qué tecla se usa para interactuar (coger/dejar objeto). Respectivamente, abajo, M o FIRE. Define sólo una, como con el scripting.\n\nUn componente del SIM es el inventario. El inventario es exactamente el mismo que te sale cuando usas scripting y lo defines en tu script. Se configura con las siguientes directivas:\n\n```c\n\t// Display:\n\t#define SIM_DISPLAY_HORIZONTAL\n\t#define SIM_DISPLAY_MAXITEMS\t2\n\t#define SIM_DISPLAY_X\t\t\t24\n\t#define SIM_DISPLAY_Y\t\t\t21\n\t#define SIM_DISPLAY_ITEM_EMPTY\t31\n\t#define SIM_DISPLAY_ITEM_STEP\t3\n\t#define SIM_DISPLAY_SEL_C\t\t66\n\t#define SIM_DISPLAY_SEL_CHAR1\t62\n\t#define SIM_DISPLAY_SEL_CHAR2\t63\n```\n\nSi se define `SIM_DISPLAY_HORIZONTAL`, el inventario se mostrará en una linea horizontal. Si no se define, se mostrará en una linea vertical.\n\n`SIM_DISPLAY_MAXITEMS` define el número de slots del inventario.\n\n`SIM_DISPLAY_X` y `SIM_DISPLAY_Y` indican la coordenada de la pantalla donde se mostrará el inventario. `SIM_DISPLAY_ITEM_STEP` define cada cuántas celdas de carácter se dibujará un nuevo slot a partir de las coordenadas iniciales.\n\n`SIM_DISPLAY_ITEM_EMPTY` especifica qué tile representa el slot vacío.\n\n`SIM_DISPLAY_SEL_C` especifica el color del selector, y `SIM_DISPLAY_SEL_CHAR1` y `SIM_DISPLAY_SEL_CHAR2` qué dos carácteres de tu charset utilizar para dibujarlo.\n\nUna vez definido todo esto, tendremos que abrir engine/sim.h para terminar de configurar nuestro juego.\n\nEn sim.h se definen dos arrays: `sim_initial` y `sim_final`. El primero define la ubicación de los contenedores en el mapa y su contenido inicial; el  segundo define un estado final que hará que ganemos el juego si se alcanza.\n\n`sim_initial` es un array de estructuras. Se define una entrada por cada container del juego (en total, `SIM_MAXCONTAINERS` entradas). Cada entrada tiene un formato `{n_pant, XY, tile}`, donde `n_pant` es la pantalla donde se encuentra, XY son las coordenadas (4 bits X, 4 bits Y, como en extraprints) y tile es el tile que representa al objeto contenido en el container al principio del juego.\n\nPor ejemplo `{10, 0x54, 32}` hará que en la pantalla 10 haya un container en la posición X=5, Y=4, que tenga inicialmente el objeto 32.\n\n`{3, 0xB3, 0}` hará que en la pantalla 3, en la posición X=11, Y=3, haya un container vacío.\n\n`sim_final` es un array de números. Simplemente especifica qué item debe haber en cada container para terminar el juego. \n\nPor ejemplo, imaginemos un juego tonto donde hay un objeto en la pantalla 0 y otro en la pantalla 1, y hay que intercambiarlos para ganar. Los objetos aparecerán ambos en X=7, Y=4, y se representarán con los tiles 20 y 21.\n\nEn ese caso, `SIM_MAXCONTAINERS` valdría 2 y nuestros arrays serían:\n\n```c\n\tSIM_CONTAINER sim_initial [SIM_MAXCONTAINERS] = {\n\t\t{0, 0x74, 20},\n\t\t{1, 0x74, 21}\n\t};\n\n\tunsigned char sim_final [SIM_MAXCONTAINERS] = {21, 20};\n```\n\nTan sencillo como esto. Al principio, los contenedores contienen los objetos 20 y 21, y al final deben contener los objetos 21 y 20.\n\nNOTA IMPORTANTE: SIM necesita que activemos los Floating Objects de tipo contenedor en config.h\n\n```c\n\t#define ENABLE_FO_OBJECT_CONTAINERS\n```\n\nAdemás: si no has enredado debería estar igual, pero asegúrate de todos modos que el valor de `FT_FLAG_SLOT` en config.h y de `FLAG_SLOT_SELECTED` en sim.h se corresponden. Parece guarrero, pero está así para posibles futuras ampliaciones.\n\n\nMejoras en el JETPAC\n--------------------\n\nEl Jetpac se nos ocurrió en la Churrera 1.0 y lo programamos, pero sin probar. No lo usamos hasta la Churrera 3.1, cuando hicimos Cheril the Goddess, y era muy rawro. Luego lo usamos en Jet Paco. \n\nDesde el principio habíamos pensado en darle chicha con recargas, fuel que se acaba, y cosas asín, pero hasta AHORA no se ha hecho.\n\n```c\n\t#define PLAYER_HAS_JETPAC            \t\n\t#define JETPAC_DEPLETES\t\t\t\t4\t\n\t#define JETPAC_FUEL_INITIAL\t\t\t25\t\n\t#define JETPAC_FUEL_MAX\t\t\t\t25\t\n\t#define JETPAC_AUTO_REFILLS\t\t\t2\n\t//#define JETPAC_REFILLS\t\t\t\t\n\t//#define JETPAC_FUEL_REFILL\t\t25\t\n```\n\n`PLAYER_HAS_JETPAC`, de toda la vida, activa este sistema. Si sólo defines esto, tendrás un jetpac como en jetpaco. Guay.\n\nSi activas `JETPAC_DEPLETES` con valor \"X\", el jetpac tendrá fuel que se irá agotando cada X frames, con X una potencia de 2 (2, 4, 8, 16...).  Teniendo esto activo, podemos definir más comportamientos.\n\n`JETPAC_FUEL_INITIAL` y `JETPAC_FUEL_MAX` son necesarias en todo caso si activas `JETPAC_DEPLETES`. Especifican el valor de fuel al principio del juego y el valor máximo que se puede alcanzar.\n\nCon esto hemos conseguido que el fuel se gaste. Ahora hay que decidir cómo recuperarlo:\n\nSi activas `JETPAC_AUTO_REFILLS` con valor \"Y\", el jetpac se recargará sólo cuando no se esté usando, cada Y frames, con Y una potencia de 2.\n\nSi, en cambio, activas `JETPAC_REFILLS`, aparecerán recargas que se colocan como hotspots de tipo 6 en el colocador. Cada recarga recargará el número de unidades especificado en `JETPAC_FUEL_REFILL`.\n\n\nWhoa\n----\n\nSí, eso digo yo. Para un easter egg. Además he corregido unos cuantos bugs que he visto por ahí y he limpiado algunas cosillas.\n\n\nMT Engine MK2 v 0.87\n====================\n\nEdición Leovigildo III. Tiene pocas cosas puramente nuevas, pero trae un porrón de mejoras internas, arreglos de bugs, optimizaciones...\n\nEl módulo nuevo de enemigos.\n----------------------------\n\nPara usarlo, asegúrate de comentar `#define USE_OLD_ENEMS`.\n\nAhora los enemigos son mucho más flexibles. Cada uno define varias cosas:\n\n- Qué sprite usa, de 0 a 3.\n- Qué tipo de movimiento lleva: lineal, volador...\n- Si dispara o no.\n\nAdemás está preparado para que sea muy fácil meter más comportamientos.\n\nTodo se especifica en el tipo de enemigo, que se divide en varios campos a nivel de bits:\n\n```\n\t76543210\n\tXBBBBFSS\n```\n\nDonde:\n\n- X está reservado para marcar si un enemigo está muelto.\n- BBBB es el tipo de movimiento. Por ahora hay implementados estos:\n\n```\n0001 (1) - lineal de ida y vuelta, como siempre.\n0010 (2) - volador. Como los fantys tipo 6. \n0011 (3) - perseguidor. Los coñazo tipo 7 de siempre.\n1000 (8) - plataforma móvil. Como \"1\" pero plataforma móvil.\n```\n\nOjete! Si usas tipo 2, tienes que activar ENABLE_FLYING_ENEMIES. Si \nusas tipo 3, activa ENABLE_PURSUE_ENEMIES.\n\n- F es si dispara (1) o no (0). Si lo activas para algún enemigo, acuérdate de que tienes que activar `ENABLE_SHOOTERS` y configurar `MAX_COCOS` y otras cosas.\n\n- SS es el número de sprite, según spriteset, de 0 a 3 (00, 01, 10, 11).\n\nEl \"tipo\" de enemigo se calcula, por tanto, usando esta fórmula tonter:\n\nS + 4 * F + 8 * B, donde S es el sprite, F si dispara, y B el comportamiento\n\nPara colocarlos puedes calcular tú el valor del tipo de enemigo usando la fórmula de arriba (es binario) o usar el Colocador MK2 que hay  en /enems, donde puedes poner los valores por separado. Lo que te pete.\n\nModificaciones a los floating objects\n-------------------------------------\n\n- Ahora se puede controlar mejor su comportamiento con respecto a la gravedad - por si queremos usarlos en juegos de vista genital, más que nada:\n\n```c\n\t#define FO_GRAVITY\n\t#define FO_SOLID_FLOOR\t\n```\n\nActivando la primera, los FO se caen si no hay suelo debajo. Con la segunda, se pararán al llegar a la firla inferior de la pantalla en lugar de desaparecer.\n\n- Los FO \"matan\" mientras los llevas a cuestas. Esto es por la tontería de este juego, no sé si servirá para algo más... De todos modos no me  costaba ponerlo en el config en vez de una paranoia custom...\n\n```c\n\t#define CARRIABLE_BOXES_DRAIN\t\t7\n```\n\n- Corchonetas. Los FO pueden ser corchonetas. Si caes sobre ellos, rebotarás. Puedes definir el máximo de velocidad rebotante.\n\n```c\n\t#define CARRIABLE_BOXES_CORCHONETA\t\n\t#define CARRIABLE_BOXES_MAX_C_VY\t1024\t\n```\n\nPara que esto funcione tienes que darle el comportamiento \"rebotante\" al tile que represente la corchoneta. Esto significa que en una futura versión podemos usar tiles rebotantes que no sean FO, sólo definiendo el comportamiento... Creo.\n\n```c\n\t// 0 = Walkable (no action)\n\t// 1 = Walkable and kills.\n\t// 2 = Walkable and hides.\n\t// 4 = Platform (only stops player if falling on it)\n\t// 8 = Full obstacle (blocks player from all directions)\n\t// 10 = special obstacle (pushing blocks OR locks!)\n\t// 16 = Breakable (#ifdef BREAKABLE_WALLS)\n\t// 32 = Conveyor \n\t// 64 = CUSTOM F.O. -> CORCHONETA!\n```\n\n- Scripting FO\n\nEsto puede servir para muchas cosas pero hay que usarlo con cuidado. Se emplea en Leovigildo III para detectar que le tiramos una corchoneta en la cabeza al domador.\n\nBásicamente, si se activa, cuando un FO \"cae\", se almacena su tipo y posición en tres flags (configurables) y se llama a PRESS_FIRE en el script de esa pantalla.\n\n```c\n\t#define ENABLE_FO_SCRIPTING\t\t\t\n\t#define FO_X_FLAG\t\t\t\t\t1\n\t#define FO_Y_FLAG\t\t\t\t\t2\n\t#define FO_T_FLAG\t\t\t\t\t3\t\n```\n\nEsto empieza a dar mucho miedo. Ya daba miedo en Ninjajar. Ahora es aterrador.\n\n\nMT Engine MK2 v 0.86\n====================\n\nEdición \"Phantomas Engine\". Ahora se puede hacer juegos de Phantomas - esto abre la posibilidad de añadir muy fácilmente más motores de movimiento puramente lineales (sin inercia).\n\n```c\n\t// Phantomas Engine\n\t// ----------------\n\t// Coment everything here for normal engine\n\t#define PHANTOMAS_ENGINE \t\t1\t\t// Which phantomas engine:\n\t\t\t\t\t\t\t\t\t\t\t// 1 = Phantomas 1\n\t\t\t\t\t\t\t\t\t\t\t// 2 = Phantomas 2\n\t\t\t\t\t\t\t\t\t\t\t// 3 = LOKOsoft Phantomas\n\t\t\t\t\t\t\t\t\t\t\t// 4 = Abu Simbel Profanation\n\t\t\t\t\t\t\t\t\t\t\t\n\t#define PHANTOMAS_FALLING \t\t4\t\t// Falling speed (pixels/frame)\n\t#define PHANTOMAS_WALK\t\t\t2\t\t// Walking speed\n\n\t#define PHANTOMAS_INCR_1\t\t2\t\t// Used for jumping\n\t#define PHANTOMAS_INCR_2\t\t4\n\t#define PHANTOMAS_JUMP_CTR\t\t16\t\t// Total jumping steps up&down\n\n\n\t// Most things from now on won't apply if PHANTOMAS_ENGINE is on...\n\t// Try... And if you need something, just ask us... Maybe it's possible to add.\n\n\t// For example, BOUNDING_BOX_8_BOTTOM works for PHANTOMAS/PROFANANTION engines.\n```\n\nEs sencillo (o no). Hay cuatro tipos de motor, como se ve en el código. Luego hay parámetros de configuración.\n\nTal y como está, seleccionando el motor 1 el movimiento será como en Phantomas 1, el motor 2 lo hará como Phantomas 2, y el motor 4 como Abu Simbel Profanation... Pero jugando con los valores conseguirás otras cosas.\n\nLos motores 1, 2 y 4 se basan en que hay dos tipos de saltos. En el motor 1 tenemos salto alto (2 tiles de alto, 1 de ancho) y salto largo (1 tile de alto, 4 de ancho). En el motor 2 tenemos salto largo (algo más de 2 tiles de alto, 2 tiles de ancho) y corto (1 tile x 1 tile), y además podemos cambiar la dirección del salto en medio del aire. En el motor 4 tenemos saltos igual que en el motor 2, pero no se puede cambiar la dirección y además si pulsamos sólo salto el muñeco saltará para arribá (es necesario pulsar salto + izq. o der. para saltar lateralmente).\n\nAdemás hemos aprovechado para añadir soporte para enemigos 100% custom al módulo de enemigos, y hemos incluido un par como \"addons\": gotas y  flechas, que utilizan sus propios sprites. Además, hay una nueva utilidad para convertir sprites para estos tejemanejes. \n\n```c\n\t#define ENABLE_DROPS\t\t\t\t\t// Enemy type 9 = drops\n\t#define ENABLE_ARROWS\t\t\t\t\t// Enemy type 10 = arrows\n```\n\nEstos enemigos se colocan con el colocador. Mira los archivos\n\n```\n\t\\dev\\addons\\drops\\move.h \n\t\\dev\\addons\\arros\\move.h\n```\n\npara ver cómo se especifican sus valores. \n\nLo mejor es que si quieres usar esto nos pongas un mensajito o algo pidiendo el microjuego de ejemplo donde se ve todo en acción. Es que no creo que lo vayamos a sacar así por las buenas, no tengo tiempo ni energías.\n\n\nMT Engine MK2 v 0.85\n====================\n\nCambios y añadidos para la segunda carga de Leovigildo. Son un montón, a ver si me acuerdo:\n\n- Se puede lanzar las cajas CARRIABLE_BOXES pulsando FIRE. Las cajas matan los bichos y los cuentan en un flag:\n\n```c\n\t#define CARRIABLE_BOXES_THROWABLE\n\t#define CARRIABLE_BOXES_COUNT_KILLS 2\n```\n\n- Modo mono-pantalla. Sólo se puede cambiar de pantalla por scripting, no se detecta el cambio de pantallas de toda la vida cuando el niño se pega al borde. Esto sirve para hacer juegos de pantalla en pantalla.\n\n```c\n\t#define PLAYER_CANNOT_FLICK_SCREEN\t\n```\n\n- Contar cuántos bichos hay en la pantalla y meterlos en un flag. Para hacer güegos de \"mátalos todos para pasar\" o cosas por el estilo, del palo \"si matas todos los bichos pasa algo\".\n\n```c\n\t#define COUNT_SCR_ENEMS_ON_FLAG\t1\t\n```\n\n- Cada vez que se cambia de pantalla, mostrar el número de pantalla +1 en plan número de nivel. Para juegos pantalla-a-pantalla.\n\n```c\n\t#define SHOW_LEVEL_ON_SCREEN\t\t\n```\n\n- Vamos a cambiar el módulo de enemigos, así que nos vamos preparando. Como el módulo viejo no lo voy a borrar, puedes seguir usándolo si especificas\n\n```c\n\t#define USE_OLD_ENEMS\t\t\t\t\n```\n\n- Desactivar plataformas móviles en juegos de plataformas. Ahora puedes tener cuatro enemigos diferentes. \n\n```c\n\t#define DISABLE_PLATFORMS\t\t\t\n```\n\n- Enemigos resucitan al entrar en la pantalla. Vale, esto ya estaba, pero ahora tiene algunos cambios:\n\n```c\n#define RESPAWN_ON_ENTER\t\t\n#define RESPAWN_ON_REENTER\t\t\n```\n\nSi activas la primera, al entrar con el muñeco en una pantalla los enemigos volverán a la vida. \n\t\nSi activas, además, la segunda, los enemigos volverán a la vida también tras el comando REENTER en el script.\n\n- Hemos mejorado un montón de cosas, entre ellas el timer, que estaba algo roto (todavía quedarán muchas cosas de la Churrera que estén rotas, vamos poco a poco).\n\n\nMT Engine MK2 v 0.8\n===================\n\nHemos reescrito el motor casi entero. Aún falta el módulo de enemigos, que queremos reorganizar. Por eso aún no estamos en la 1.0.\n\nEl nuevo motor funciona prácticamente igual que la Churrera 3.X, pero funciona más rápido y ocupa menos memoria. Además hay un montón de cosas nuevas, como los \"hitters\" de Ninjajar (por ahora para dar hostias, pero pronto para hacer espadas), mejor soporte multi-fase en el scripting, poder saltar de una fase a otra, motor de items mejorado...\n\nFloating Objects\n================\n\n```c\n\t#define ENABLE_FLOATING_OBJECTS\n```\n\nSon tiles interactuables que no forman parte del mapa. Se colocan desde el script. Por ahora el motor puede manejar dos tipos.\n\nLos floating objects se colocan en cada pantalla desde el script:\n\n```\n\tADD_FLOATING_OBJECT t, x, y\n```\n\n- Carriable boxes\n\n```c\n\t#define ENABLE_FO_CARRIABLE_BOXES\n\t#define CARRIABLE_BOXES_ALTER_JUMP 180\n\t#define FT_CARRIABLE_BOXES\t\t\t16\n```\n\nSon cajas que se pueden transportar. Necesita que reservemos 10 bloques de sprites más (ver main.c, al principio) para un sprite extra. Las cajas se cogen y depositan pulsando ABAJO. Las cajas se ven afectadas por la gravedad y se apilan unas a otras. \n\nPuedes definir el tile que usan con la directiva FT_CARRIABLE_BOXES. Los objetos emplean el comportamiento definido para este tile. Será el valor que hay que darle a \"t\" a la hora de colocarlos desde el script, por ejemplo para poner una de estas cajas en la posición 7, 8 habiendo definido que su tile es el 16 hacemos:\n\n```\n\tADD_FLOATING_OBJECT 16, 7, 8\n```\n\nSi defines `CARRIABLE_BOXES_ALTER_JUMP`, el valor máximo de la velocidad de salto se cambiará por el valor especificado cuando llevemos una caja.\n\n- Item containers\n\n```c\n\t#define ENABLE_FO_OBJECT_CONTAINERS\t\t\n\t#define FT_FLAG_SLOT\t\t\t\t30\t\n```\n\nEstos están pensados para ser usados con el motor de inventario del scripting. Cada contenedor en realidad representa un flag del sistema de scripting. Al pintar la pantalla se pintará el tile cuyo número esté almacenado en el flag correspondiente.\n\nPara crearlos desde el scripting:\n\n```\n\tADD_FLOATING_OBJECT 128 + f, x, y\n```\n\nDonde f es el flag que queremos representar. Por ejemplo, si vamos a usar el flag 10 para representar un contenedor en la posición 4, 4 de la pantalla, deberíamos crearlo así:\n\n```\n\tADD_FLOATING_OBJECT 138, 4, 4\n```\n\nComo esto es un poco confuso, hemos añadido un alias. Lo mismo puede hacerse\nllamando a:\n\n```\n\tADD_CONTAINER f, x, y\n```\n\nEl ejemplo anterior sería:\n\n```\n\tADD_CONTAINER 10, 4, 4\n```\n\nEl motor reacciona a estos bloques intercambiando el objeto seleccionado del\ninventario con el que haya en el contenedor.\n\nAlias en el script\n==================\n\nPorque haciendo Ninjajar nos quisimos volver locos con tanto flag, hemos\nañadido alias. Definimos un bloque al principio del script así:\n\n```\n\tDEFALIAS\n\t\t$ALIAS N\n\t\t...\n\tEND\n```\n\nA partir de entonces, podemos sustituir \"N\" por \"$ALIAS\". Por ejemplo, si\nusamos el flag 2 para abrir una puerta verde y el flag 3 para ver si hemos\nhablado con el ogro hacemos:\n\n```\n\tDEFALIAS\n\t\t$PUERTA_VERDE 2\n\t\t$HABLA_OGRO 3\n\tEND\n```\n\nEn el script podemos usar los alias en vez del numerico:\n\n```\n\t...\n    IF FLAG $HABLA_OGRO = 0\n    THEN\n        EXTERN 10\n        SET FLAG $HABLA_OGRO = 1\n    END\n\t...\n```\n\n\n3.99.3c\n=======\n\n```c\n#define PLAYER_CAN_FIRE_FLAG   1\n```\n\nSi se define, el flag indicado controla si el jugador puede (1) o no (0)  disparar.\n\nMOTOR DE ITEMS\n--------------\n\nQueremos conseguir que pueda haber un pequeño inventario en pantalla y poder seleccionar un objeto de él, y además queremos que los objetos que compongan el inventario no sean fijos y que podamos saber, desde el script, qué objeto hay seleccionado.\n\n- En una sección inicial del script, vamos a definir \"el itemset\" (hay que ponerle nombres a las cosas, aunque sean nombres tan chungos como este): cuantos espacios tiene, dónde se colocan, y como se distribuyen los objetos. Algo así:\n\n```\n\tITEMSET\n\t   # Número de huecos:\n\t   SIZE 3\n\t   \n\t   # Posición x, y\n\t   LOCATION 2, 21\n\t   \n\t   # Horizonta/vertical, espaciado\n\t   DISPOSITION HORZ, 3\n\t   \n\t   # Color y caracteres para pintar el selector\n\t   SELECTOR 66, 82, 83\n\t   \n\t   # (si se define) qué tile representa el tile vacío\n\t   EMPTY 31\n\t   \n\t   # Flag que contiene qué hueco está seleccionado\n\t   SLOT_FLAG 14\n\t   \n\t   # Flag que contiene qué objeto está en el hueco seleccionado\n\t   ITEM_FLAG 15\n\tEND\n```\n\n- Un objeto se representa por su tile. Si tenemos una corona en el tile 10, el objeto corona será el 10. Si en un hueco del inventario está el 10, significa que en ese hueco está la corona. El valor 0 siempre representará un hueco vacío. Esto simplifica el código una barbaridad.\n\n- En el script habrá cambios. ITEM n = t significa que en el hueco \"n\" está el objeto representado por el tile t. Definimos, pues, las siguientes condiciones:\n\n```\n\tIF ITEM n = t\n\tIF ITEM n <> t\n```\n\nComprueban que en el espacio \"n\" está o no el objeto de tile \"t\".\n\n```\n\tIF SEL_ITEM = t\n```\n\nComprueba que en el espacio seleccionado por el selector está el objeto de  tile \"t\"\n\nY los siguientes comandos:\n\n```\n\tSET ITEM n = t\n```\n\nEstablece en el hueco n el tile t. Obviamente, para quitar un objeto del hueco n, pondremos un 0.\n\nHay una limitación, por tanto, en el número de objetos que puede llevar el personaje a la vez. Con un poco de cabeza, como he dicho, se puede gestionar esto muy bien, y con un mínimo de código añadido al motor tenemos una herramienta bastante potente. Todo esto hay que combinarlo con los flags para tener funcionalidad completa. Con los ITEMs solo podemos saber si tenemos o no un ITEM en el inventario, pero no si se ha usado ya. Para eso necesitamos los flags.\n\n¿Cómo se usa esto? Pongamos un ejemplo.\n\nImaginad que en la pantalla 6 tenemos un objeto \"corona\", representado por el tile 33, y lo tenemos en (7, 7). Además, el flag que indica su estado es el 3, que valdrá 0 cuando aún no lo hayamos cogido ni nada, para pintarlo en la pantalla.\n\n```\n\tENTERING SCREEN 6\n\t    IF FLAG 3 = 0\n\t    THEN\n\t        SET TILE (7, 7) = 33\n\t    END\n\tEND\n```\n\nVamos a gestionar el hecho de cogerlo. Podemos hacerlo en modo básico o en modo virguero. Veamos el modo básico primero. En el modo básico asignamos \"a mano\" un hueco fijo para cada item. La corona la colocaremos en el hueco 2:\n\n```\n\tPRESS_FIRE AT SCREEN 6\n\t    IF PLAYER_TOUCHES (7, 7)\n\t    IF FLAG 3 = 0\n\t    THEN\n\t        SET FLAG 3 = 1\n\t        SET TILE (7, 7) = 0\n\t        SET ITEM 2 = 33\n\t    END\n\tEND\n```\n\nEl juego con el flag 3 es simplemente para que no vuelva a dibujarse. Cuando el flag 3 valga 1 no se volverá a pintar el objeto al volver a entrar en la pantalla, ni intentaremos cogerlo de nuevo. Por lo demás, lo que se hace es hacer que en el hueco 2 esté el objeto 33.\n\nImaginad que en la pantalla 12 tenemos que usarlo en la coordenada 5, 8. Pues habrá que comprobar que el item seleccionado es el 33:\n\n```\n\tPRESS_FIRE AT SCREEN 12\n\t    IF SEL_ITEM = 33\n\t    THEN\n\t        SET ITEM 2 = 0\n\t        # mas cosas\n\t    END\n\tEND\n```\n\nSi el objeto seleccionado es el 33 (que sólo podrá ocurrir si antes lo colocamos en el hueco 2), lo quitamos del inventario (poniendo un 0 en el slot 2) y luego hacemos más cosas.\n\nEl modo virugero es que el objeto vaya al hueco seleccionado. Para eso usamos la indirección que permite el motor de scripting con el operador #. Recordad que estamos usando el flag 10 para representar el hueco seleccionado. Juguemos con eso. Además, habrá que comprobar que el hueco está libre!\n\n```\n\tPRESS_FIRE AT SCREEN 6\n\t    IF PLAYER_TOUCHES (7, 7)\n\t    IF FLAG 3 = 0\n\t    IF FLAG 10 <> 0\n\t    THEN\n\t        # Mal! el hueco no está libre!\n\t        SOUND 2\n\t    END\n\n\t    IF PLAYER_TOUCHES (7, 7)\n\t    IF FLAG 3 = 0\n\t    IF FLAG 10 = 0\n\t    THEN\n\t        SET FLAG 3 = 1\n\t        SET TILE (7, 7) = 0\n\t        SET ITEM #10 = 33\n\t    END\n\tEND\n```\n\n¿Qué hacemos? Pues colocar el objeto de tile 33 (nuestra corona) en el espacio seleccionado, que no es más que el que está almacenado en el flag 10 (recordad que #10 significa \"el valor del flag 10\").\n\nPara comprobar que lo tenemos, pues lo mismo.\n\n¿Qué os parece? ¿Dudas? ¿Algo que comentar? Si mola, lo haré exactamente como he descrito.\n\n\n3.99.3b\n=======\n\nMínima revisión. Se arregla lo necesario para poder tener juegos de 128K con un sólo nivel (es decir, usar `MODE_128K` sin `COMPRESSED_LEVELS`).\n\nAhora mismo hay dos ejemplos que te pueden ayudar si quieres hacer un juego de 128K:\n\n- Goku Mal: 128K con niveles comprimidos. Ver este doc y los fuentes del juego.\n- Las nuevas aventuras de Dogmole Tuppowsky: 128K con un sólo nivel.\n\nAdemás, en spare he añadido el archivo extern-textos.h cuyo contenido podéis usar en extern.h si queréis una forma sencilla de mostrar textos en pantalla mediante el comando EXTERN n del script.\n\n\n3.99.3\n======\n\nTiles animados\n--------------\n\nSi se define:\n\n```c\n\t#define ENABLE_TILANIMS\t\t\t32\t\t\n```\n\nEn config.h, los tiles >= que el índice especificado se consideran animados. En el tileset, vienen por parejas. Si se define, por ejemplo, \"46\", entonces la única pareja de tiles 46 y 47 estará animada. El motor los detectará y cada frame hará que uno de los tiles 46 cambie de estado.\n\nPuede haber un máximo de 64 tiles animados en la misma pantalla. Si pones más, petará.\n\nModo 128K\n---------\n\nTienes que hacer mucho trabajo manual con esto. Lo siento, pero es así. En primer lugar habrá que crear un make.bat que construya todo lo que necesitas. Para ello puedes basarte en el archivo spare/make128.bat y adecuarlo a tu proyecto.\n\nEl modo 128K es igual que el 48K pero usar WYZ Player y además soporta varios niveles. No podrás tener niveles más largos, pero sí podrás tener varios niveles. \n\nPara usarlo, necesitas activar tres cosas en config.h:\n\n```c\n\t#define MODE_128K\n\t#define COMPRESSED_LEVELS\n\t#define MAX_LEVELS\t\t\t4\t\t\t\n```\n\nEn MAX_LEVELS tienes que especificar el número de niveles que vas a usar.\n\nEn churromain.c hay que cambiar la posición de la pila y colocarla por debajo del binario principal:\n\n```c\n\t#pragma output STACKPTR=24299\n```\n\nLuego hay que modificar levels128.h, que es donde se define la estructura de niveles y que se incluye en modo 128K. Ahí verás un array levels, con información sobre los niveles. En principio se incluye muy poca información:\n\n```c\n\t// Level struct\n\tLEVEL levels [MAX_LEVELS] = {\n\t\t{3,2},\n\t\t{4,3},\n\t\t{5,4},\n\t\t{6,5}\t\n\t};\n```\n\nEl primer valor es el número de recurso (ver más adelante) que contiene el nivel. El segundo valor es el número de la canción en WYZ PLAYER que debe sonar mientras se juega al nivel.\n\nPara preparar un nivel tienes que usar la nueva utilidad buildlevel.exe que hay en /utils. Esta utilidad toma los siguientes parámetros:\n\n```\n$ buildlevel \tmapa.map map_w map_h lock font.png work.png spriteset.png \n\t\t\t\textrasprites.bin enems.ene scr_ini x_ini y_ini max_objs \n\t\t\t\tenems_life behs.txt level.bin\n```\n\n- mapa.map Es el mapa de mappy\n- map_w, map_h Son las dimensiones del mapa en pantallas.\n- lock 15 para autodetectar cerrojos, 99 si no hay cerrojos\n- font.png es un archivo de 256x16 con 64 caracteres ascii 32-95\n- work.png es un archivo de 256x48 con el tileset\n- spriteset.png es un archivo de 256x32 con el spriteset\n- extrasprites.bin lo encuentras en /levels\n- enems.ene el archivo con los enemigos/hotspots de colocador.exe\n- scr_ini, scr_x, scr_y, max_objs, enems_life valores del nivel\n- behs.txt un archivo con los tipos de tiles, separados por comas\n- level.bin es el nombre de archivo de salida.\n   \nCuando tengamos todos los niveles construidos, hay que comprimirlos con apack:\n\n```\n$ /utils/apacke.exe level1.bin level1c.bin\n```\n\nCuando tengamos todos los niveles comprimidos, habrá que crear las imagenes binarias que se cargarán en las páginas de RAM extra. Para eso usamos la utilidad librarian que hay en la carpeta /bin. De hecho, es buena idea trabajar en la carpeta /bin para esto.\n\nLa utilidad librarian utiliza una lista list.txt con los binarios comprimidos que debe ir metiendo en las imagenes binarias que irán en las páginas extra de RAM. Lo primero que tendremos que meter serán los archivos title.bin, marco.bin y ending.bin, en ese orden. Si no tienes marco.bin debes usar un archivo de longitud 0, pero debes especificarlo. Luego añadiremos nuestros niveles. Por ejemplo:\n\n```\n\ttitle.bin\n\tmarco.bin\n\tending.bin\n\tlevel1c.bin\n\tlevel2c.bin\n\tlevel3c.bin\n\tlevel4c.bin\n```\n\nAhí hemos añadido cuatro niveles comprimidos.\n\nAl ejecutar librarian, irá rellenando imagenes de 16K destinadas para ir en la RAM extra. Primero creará ram3.bin, luego ram4.bin y finalmente ram6.bin, según vaya necesitando más espacio.\n\nTambién generará el archivo librarian.h, que tendremos que copiar en /dev. Aquí podremos ver el número de recurso asociado a cada binario:\n\n```c\n\tRESOURCE resources [] = {\n\t   {3, 49152},   // 0: title.bin\n\t   {3, 50680},   // 1: marco.bin\n\t   {3, 50680},   // 2: ending.bin\n\t   {3, 52449},   // 3: level1c.bin\n\t   {3, 55469},   // 4: level2c.bin\n\t   {3, 58148},   // 5: level3c.bin\n\t   {3, 60842}   // 6: level4c.bin\n\t};\n```\n\nEstos números de recurso son los que tendremos que especificar en el array levels que mencionamos más arriba. En concreto, los recursos 3, 4, 5 y 6 son los que contienen los cuatro niveles.\n\nCon todo esto hecho y preparado, habrá que montar la cinta. Para ello hay que crear un loader.bas adecuado (puedes ver un ejemplo en /spare/loader.bas) y construir un .tap con cada bloque de RAM (de nuevo, el ejemplo en /spare/make.bat construye la cinta con binarios en RAM3 y RAM4).\n\nTambién necesitarás RAM1.BIN para construir RAM1.TAP, conteniendo el player de WYZ con las canciones. Para ello tendrás que modificar /mus/WYZproPlay47aZX. ASM en /mus para que incluya tus canciones. Tienes un ejemplo en /spare.\n\nComo ves, es un poco tedioso. Te recomiendo que construyas mini-proyectos en 48K según vas haciendo los niveles, y que al final montes una versión 128K con todo.\n\nAdemás, puedes usar el espacio extra para meter más pantallas comprimidas, o incluso código para usar passwords para saltar directamente a los niveles. Puedes ver ejemplos de todo esto en Goku Mal 128.\n\nHotspots tipo 3\n---------------\n\nHemos hecho esta modificación, propuesta en el foro, fija a golpe de directiva. Si defines\n\n```c\n\t#define USE_HOTSPOTS_TYPE_3\t\t\t\t// Alternate logic for recharges.\n```\n\nLas recargas aparecerán única y exclusivamente donde tú las coloques, usando el hotspot de tipo 3.\n\nPausa / Abortar\n---------------\n\nSi se define\n\n```c\n\t#define PAUSE_ABORT\t\t\t\t\t\t// Add h=PAUSE, y=ABORT\n```\n\nSe añade código para habilitar la tecla \"h\" para pausar el juego y la tecla \"y\" para interrumpir la partida. Si quieres cambiar la asignación tendrás que tocar el código en mainloop.h\n\nMensaje al coger objetos\n------------------------\n\nSe se define\n\n```c\n\t#define GET_X_MORE\t\t\t\t\t\t// Shows \"get X more\" \n```\n\nAparecerá un mensaje con los objetos que te quedan cada vez que coges uno.\n\n\n\n3.99.2mod\n=========\n\nEsta fue una versión especial con una cosa que nos pidió Radastan, los...\n\nTiles animados\n--------------\n\nTodo se basa en tilanim.h. Este archivo se incluye si se define en config.h la directiva ENABLE_TILANIMS. Además, el valor de esta directiva es el que define el número de tile menor que se considera animado.\n\nEn tilanim.h hay, además de la definición de datos, dos funciones:\n\n```c\n\tvoid add_tilanim (unsigned char x, unsigned char y, unsigned char t) \n```\n\nse llama desde la función que pinta la pantalla actual si detecta que el tile que va a pintar es >= ENABLE_TILANIMS. Añade un tile animado a la lista de tiles.\n\n```c\n\tvoid do_tilanims (void)\n```\n\nse llama desde el bucle principal. Básicamente selecciona un tile animado al azar entre todos los almacenados, le cambia el frame (de 0 a 1, de 1 a 0) y lo dibuja.\n\nPara usarlo sólo tienes que definir en config.h la directiva ENABLE_TILANIMS con el tile animado menor. Por ejemplo, si tus cuatro últimas parejas de tiles (8 en total) son los animados, pon el valor 40. Luego, en el mapa, se tiene que poner el tile menor de la pareja, o sea, el tile 40 para 40-41, el 42 para 42-43... Si no lo haces así pasarán cosas divertidas. El código es (tiene que ser) minimal, no se comprueba nada, así que cuidao.\n\nPor cierto, esto no se ha probado. Si lo pones en tu güego y se peta, mal.\n\n\n\n3.99.2\n======\n\nVenga, las churreras van saliendo como churros. Estamos que lo rompemos, y se nos ocurren cosas nuevas todos los días. Las iremos metiendo a medida que se nos ocurran güegos que las lleven.\n\nEstas son las cosas nuevas que hay en esta versión de la churrera:\n\nTemporizadores\n--------------\n\nSe añade a la churrera un temporizador que podemos usar de forma automática o desde el script. El temporizador toma un valor inicial, va contando hacia abajo, puede recargarse, se puede configurar cada cuántos frames se decrementa o decidir qué hacer cuando se agota.\n\n```c\n\t#define TIMER_ENABLE\n```\n\nCon `TIMER_ENABLE` se incluye el código necesario para manejar el temporizador. Este código necesitará algunas otras directivas que especifican la forma de funcionar:\n\n```c \n\t#define TIMER_INITIAL\t\t99\t\n\t#define TIMER_REFILL\t\t25\n\t#define TIMER_LAPSE \t\t32\n```\n\n`TIMER_INITIAL` especifica el valor inicial del temporizador. Las recargas de tiempo, que se ponen con el colocador como hotspots de tipo 5, recargarán el valor especificado en `TIMER_REFILL`. El valor máximo del timer, tanto para el inicial como al recargar, es de 99. Para controlar el intervalo de tiempo que transcurre entre cada decremento del temporizador, especificamos en `TIMER_LAPSE` el número de frames que debe transcurrir.\n\n```c\n\t#define TIMER_START\n```\n\nSi se define `TIMER_START`, el temporizador estará activo desde el principio.\n\nTenemos, además, algunas directivas que definen qué pasará cuando el temporizador llegue a cero. Hay que descomentar las que apliquen:\n\n```c\n\t#define TIMER_SCRIPT_0\t\n```\n\nDefiniendo esta, cuando llegue a cero el temporizador se ejecutará una sección especial del script, ON_TIMER_OFF. Es ideal para llevar todo el control del temporizador por scripting, como ocurre en Cadàveriön.\n\n```c\n\t//#define TIMER_GAMEOVER_0\n```\n\nDefiniendo esta, el juego terminará cuando el temporizador llegue a cero.\n\n```c\n\t//#define TIMER_KILL_0\n\t//#define TIMER_WARP_TO 0\n\t//#define TIMER_WARP_TO_X \t1\n\t//#define TIMER_WARP_TO_Y \t1\n```\n\nSi se define `TIMER_KILL_0`, se restará una vida cuando el temporizador llegue a cero. Si, además, se define `TIMER_WARP_TO`, además se cambiará a la pantalla espeficiada, apareciendo el jugador en las coordenadas `TIMER_WARP_TO_X` y `TIMER_WARP_TO_Y`.\n\n```c\n//#define TIMER_AUTO_RESET\n```\n\nSi se define esta opción, el temporizador volverá al máximo tras llegar a cero de forma automática. Si vas a realizar el control por scripting, mejor deja esta comentada.\n\n```c\n\t#define SHOW_TIMER_OVER\t\n```\n\nSi se define esta, en el caso de que hayamos definido o bien `TIMER_SCRIPT_0` o bien `TIMER_KILL_0`, se mostrará un cartel de \"TIME'S UP!\" cuando el temporizador llegue a cero.\n\nScripting:\n----------\n\nComo hemos dicho, el temporizador puede administrarse desde el script. Es interesante que, si decidimos hacer esto, activemos `TIMER_SCRIPT_0` para que cuando el temporizador llegue a cero se ejecute la sección `ON_TIMER_OFF` de nuestro script y que el control sea total. \n\nAdemás, se definen estas comprobaciones y comandos:\n\nComprobaciones:\n---------------\n\n```\n\tIF TIMER >= x\n\tIF TIMER <= x\n```\n\nQue se cumplirán si el valor del temporizador es mayor o igual o menor o igual que el valor especificado, respectivamente.\n\nComandos:\n---------\n\n```\n\tSET_TIMER a, b\n```\n\nSirve para establecer los valores `TIMER_INITIAL` y `TIMER_LAPSE` desde el script.\n\n```\n\tTIMER_START\n```\n\nSirve para iniciar el temporizador.\n\n```\n\tTIMER_STOP\n```\n\nSirve para parar el temporizador.\n\n---\n\nControl de bloques empujables\n=============================\n\nHemos mejorado el motor para que se pueda hacer más cosas con el tile 14 de tipo 10 (tile empujable) que simplemente empujarlo o que detenga la trayectoria de los enemigos. Ahora podemos decirle al motor que lance la sección `PRESS_FIRE` de la pantalla actual justo después de empujar un bloque empujable. Además, el número del tile que se \"pisa\" y las coordenadas finales se almacenan en tres flags que podemos configurar, para poderlas usar desde el script para hacer comprobaciones.\n\nEste es el sistema que se emplea en el script de Cadàveriön para controlar que coloquemos las estatuas sobre los pedestales, por poner un ejemplo.\n\nRecordemos lo que teníamos hasta ahora:\n\n```c\n\t#define PLAYER_PUSH_BOXES \t\t\t\t\n\t#define FIRE_TO_PUSH\t\t\t\t\t\n```\n\nLa primera es necesaria para activar los tiles empujables. La segunda obliga al jugador a pulsar FIRE para empujar y, por tanto, no es obligatoria. Veamos  ahora las nuevas directivas:\n\n```c\n\t#define ENABLE_PUSHED_SCRIPTING\n\t#define MOVED_TILE_FLAG \t\t1\n\t#define MOVED_X_FLAG \t\t\t2\n\t#define MOVED_Y_FLAG \t\t\t3\n```\n\nActivando ENABLE_PUSHED_SCRIPTING, el tile que se pisa y sus coordenadas se almacenarán en los flags especificados por las directivas `MOVED_TILE_FLAG`, `MOVED_X_FLAG` y `MOVED_Y_FLAG`. En el código que se muestra, el tile pisado se almacenará en el flag 1, y sus coordenadas en los flags 2 y 3.\n\n```c\n\t#define PUSHING_ACTION\n```\n\nSi definimos esta, además, se ejecutarán los scripts `PRESS_FIRE AT ANY` y `PRESS_FIRE` de la pantalla actual.\n\nRecomendamos estudiar el script de Cadàveriön, el cual, además de ser un buen ejemplo del uso del temporizador y del control del bloque empujable, resulta ser un script bastante complejo que emplea un montón de técnicas avanzadas.\n\n\nComprobar si nos salimos del mapa\n---------------------------------\n\nEs aconsejable poner límites en tu mapa para que el jugador no se pueda salir, pero si tu mapa es estrecho puede que quieras aprovechar toda la  pantalla. En ese caso, puedes activar:\n\n```c\n\t#define PLAYER_CHECK_MAP_BOUNDARIES\n```\n\nQue añadirá comprobaciones y no dejará que el jugador se salga del mapa. ¡Ojo! Si puedes evitar usarlo, mejor: ahorrarás espacio.\n\n\nTipo de enemigo \"custom\" de regalo\n----------------------------------\n\nHasta ahora habíamos dejado sin código los enemigos de tipo 6, pero hemos pensado que no nos cuesta poner uno, de ejemplo. Se comporta como los murciélagos de Cheril the Goddess. Para usarlos, ponlos en el colocador de enemigos como tipo 6 y usa estas directivas:\n\n```c\n\t#define ENABLE_CUSTOM_TYPE_6\t\t\t\n\t#define TYPE_6_FIXED_SPRITE \t2\t\t\n\t#define SIGHT_DISTANCE\t\t\t96\n```\n\nLa primera los activa, la segunda define qué sprite va a usar (menos 1, si quieres el sprite del enemigo 3, pon un 2. Sorry por la guarrada,pero ahorro bytes). La tercera dice cuántos píxels ve de lejos el bicho. Si te ve, te persigue. Si no, vuelve a su sitio (donde lo hayas puesto con el colocador).\n\nEsta implementación, además, utiliza dos directivas de los enemigos de tipo 5 para funcionar:\n\n```c\n\t#define FANTY_MAX_V             256\t\n\t#define FANTY_A                 12\t\n```\n\nDefine ahí la aceleración y la velocidad máxima de tus tipo 6. Si vas a usar también tipo 5 y quieres otros valores, sé un hombre y modifica el motor.\n\n\nConfiguración de teclado / joystick para dos botones\n----------------------------------------------------\n\nHay güegos de vista lateral que se juegan mejor con dos botones. Si activas esta directiva:\n\n```c\n\t#define USE_TWO_BUTTONS\n```\n\nEl teclado será el siguiente, en vez del habitual:\n\n```\n\tA izquierda\n\tD derecha\n\tW arriba\n\tS abajo\n\tN salto\n\tM disparo\n```\n\nSi se elige joystick, FIRE y M disparan, y N salta.\n\n\nDisparos hacia arriba y en diagonal para vista lateral\n------------------------------------------------------\n\nAhora podrás permitir que el jugador dispare hacia arriba o en diagonal. Para ello define esto:\n\n```c\n\t#define CAN_FIRE_UP\t\n```\n\nEsta configuración funciona mejor con `USE_TWO_BUTTONS`, ya que así separamos \"arriba\" del botón de salto.\n\nSi no pulsas \"arriba\", el personaje disparará hacia donde esté mirando. Si pulsas \"arriba\" mientras disparas, el personaje disparará hacia arriba. Si, además, estás pulsando una dirección, el personaje disparará en la diagonal indicada.\n\n\nBalas enmascaradas\n------------------\n\nPor velocidad, las balas no llevan máscaras. Esto funciona bien si el fondo sobre el que se mueven es oscuro (pocos pixels INK activos). Sin embargo,  hay situaciones en las que esto no ocurre y se ve mal. En ese caso, podemos activar máscaras para las balas:\n\n```c\n\t#define MASKED_BULLETS\n```\n",
			"file": "whatsnew.md",
			"file_size": 65892,
			"file_write_time": 131599720512383803,
			"settings":
			{
				"buffer_size": 63637,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/dev/config.h",
			"settings":
			{
				"buffer_size": 28359,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 132.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"beauti",
				"Beautify::Beautify File"
			],
			[
				"mini",
				"Minify::Default File Settings"
			],
			[
				"format",
				"Format: Javascript"
			],
			[
				"boxy",
				"Boxy Theme: Preferences"
			],
			[
				"markdow",
				"Set Syntax: Markdown Extended"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"ter",
				"Terminal: Open"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 382.0
	},
	"console":
	{
		"height": 118.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/git/MK2",
		"/D/git/MK2/src",
		"/D/git/MK2/src/dev"
	],
	"file_history":
	[
		"/D/Google Drive/Maritrini/dev/De otra gente/Gimmick MK2/dev/extern.h",
		"/D/git/MK2/whatsnew.md",
		"/D/git/MK2/scripting.md",
		"/D/git/MK2/dev/sound/wyzplayer.h",
		"/D/git/MK2/dev/mainloop/title_screen.h",
		"/D/git/MK2/dev/mainloop/game_init.h",
		"/D/git/MK2/dev/extern.h",
		"/D/git/MK2/dev/engine/playermove.h",
		"/D/git/MK2/dev/engine/playermods/va_swimming.h",
		"/D/git/MK2/dev/engine/hud.h",
		"/D/git/MK2/dev/engine/enemmods/animate.h",
		"/D/git/MK2/dev/engine/drawscr.h",
		"/D/Google Drive/Maritrini/dev/De otra gente/Gimmick MK2/dev/engine/enems.h",
		"/D/Google Drive/Maritrini/dev/De otra gente/Gimmick MK2/utils/src/librarian.bas",
		"/D/Google Drive/Maritrini/dev/De otra gente/Gimmick MK2/dev/make.bat",
		"/D/Proyectos/remote/desccobuz05/diario.md",
		"/D/Proyectos/2017/20170724a--Actualización API REST Consigna/ficheros.php",
		"/D/Proyectos/2017/20170724a--Actualización API REST Consigna/instrucciones.txt",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/index.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/include/rcmail.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/rcube.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/calendar/calendar.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/database_attachments/database_attachments.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/filesystem_attachments/filesystem_attachments.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry_sandetel/templates/login.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/avelsieve/lib/filters.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/config/defaults.inc.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/webmail/plugins/avelsieve/avelsieve.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/avelsieve/avelsieve.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/rcube_sandetel.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/agata_addressbook/agata_addressbook.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/avelsieve/avelsieve.php.bak",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/consigna_attachments/consigna_attachments.js",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/password/password.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/bootstrap.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/html.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/agata_addressbook/lib/abook_webdav_client.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/imap_utf7_local.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/README.md",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/avelsieve/lib/imap_utf7_local.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/agata_addressbook/lib/imap_utf7_local.php",
		"/D/Proyectos/remote/desccobuz05/install.md",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/rcube_db.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/calendar/SQL/mysql.sql",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/mypic.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry_sandetel/includes/appbar.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/config/config.inc.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/SQL/v3.sql",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/agata_addressbook/agata_addressbook_backend.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/webmail/index.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/_deactivated/responses/responses.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/include/bc.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/rcube_utils.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/index.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/vacation/lib/vacationdriver.class.php.bak",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/sandetel_login/sandetel_login.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/calendar/program/utils.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/acl/acl.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/enigma/lib/enigma_ui.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/contextmenu_folder/contextmenu_folder.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/calendar/program/backend/caldav.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/classic/includes/messagetoolbar.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry_sandetel/styles.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry_sandetel/includes/mailtoolbar.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry/includes/mailtoolbar.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry_sandetel/templates/addressbook.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/contextmenu/contextmenu.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/contextmenu/contextmenu.js",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/contextmenu/skins/larry_sandetel/contextmenu.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/contextmenu/skins/larry_sandetel/functions.js",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/js/app.js",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/ldapapi/search_simple/index.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/localization/es_ES/labels.inc",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/sts-php-client-lib/log/out.log",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/token/gentoken.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/ijab/ijab_token/ijab_config.js",
		"/D/Proyectos/remote/desccobuz05/todo.md",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/token/decrypt.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/webmail/plugins/password/password.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/webmail/config/main.inc.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/webmail/test_ws.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/password/drivers/ldap.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/rcube_cache_shared.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/example_addressbook/example_addressbook.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/example_addressbook/example_addressbook_backend.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/webmail/program/include/rcube_webdav_addressbook.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/rcube_contacts.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/lib/Roundcube/rcube_addressbook.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/steps/addressbook/list.inc",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/js/list.js",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/steps/addressbook/func.inc",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/agata_addressbook/lib/Contact_Vcard_Build.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/agata_addressbook/lib/My_Vcard_Build.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry/templates/addressbook.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/agata_addressbook/config/config.inc.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/ldap_search/ldap_search.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/agata_addressbook/lib/vcard.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/steps/settings/edit_identity.inc",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/userinfo/userinfo.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/webmail/program/js/app.js",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/webmail/program/steps/mail/sso.inc",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es-old/webmail/plugins/calendar_warning/calendar_warning.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/melanie2_larry_mobile/styles.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/melanie2_larry_mobile/mail.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/automatic_addressbook/localization/es.inc",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/automatic_addressbook/localization/es_ES.inc",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/mobile/css/melanie2_larry_mobile.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/melanie2_larry_mobile/templates/login.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/melanie2_larry_mobile/addressbook.css",
		"/C/Users/jcastano/AppData/Local/Temp/qr.c",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry_sandetel/templates/settings.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry_sandetel/watermark.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/melanie2_larry_mobile/login.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/larry_sandetel/styles.min.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/melanie2_larry_mobile/settings.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/mobile/css/jquery_mobile.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/melanie2_larry_mobile/templates/mail.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/mobile/mobile.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/mobile/css/jquery_mobile.min.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/mobile/css/melanie2_larry_mobile.min.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/mobile/css/melanie2_larry_mobile.beautified.css",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/mobile/css/melanie2_larry_mobile.min.min.css",
		"/C/Users/jcastano/AppData/Roaming/Sublime Text 3/Packages/Minify/Minify.sublime-settings",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/program/include/rcmail_output_html.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/ijab/ijab.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/plugins/persistent_login/persistent_login.php",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/melanie2_larry_mobile/includes/footer.html",
		"/D/Proyectos/remote/desccobuz05/correo.juntadeandalucia.es/skins/melanie2_larry_mobile/settings.min.css"
	],
	"find":
	{
		"height": 40.0
	},
	"find_in_files":
	{
		"height": 108.0,
		"where_history":
		[
			"D:\\git\\MK2",
			"D:\\Google Drive\\Maritrini\\dev\\De otra gente\\Gimmick MK2\\dev",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\ijab\\ijab_token",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\calendar",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05",
			"",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\lib\\Roundcube",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\agata_addressbook",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\avelsieve",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\agata_addressbook",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\steps",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\contextmenu\\skins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\ijab\\ijab_token",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\lib\\Roundcube",
			"D:\\Proyectos\\remote\\desccobuz05",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es-old\\webmail",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es-old\\webmail\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\melanie2_larry_mobile",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\mobile",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\mobile\\css",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\melanie2_larry_mobile",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\mobile",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\melanie2_larry_mobile",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\melanie2_larry_mobile",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es-old\\webmail",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\SQL\\mysql",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es-old",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\password",
			"D:\\Proyectos\\remote\\desccobuz05",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\sts-php-client-lib",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es-old",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\larry",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\larry_sandetel",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\larry",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\steps\\mail",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\lib",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\include",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\js",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins,*.js",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\*.js",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\consigna_attachments",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es-old\\webmail\\program\\steps\\settings",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\steps\\mail",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\localization",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\include",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\lib\\Roundcube",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es-old",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\larry_sandetel",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\larry_sandetel",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\roundpad",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\roundpad",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\roundpad\\localization",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\roundpad",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\steps\\bookmarks",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\steps\\addressbook",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\steps\\addressbook",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\skins\\larry",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\ijab\\js",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es-old\\webmail\\plugins\\ijab\\ijab_token",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es-old\\webmail\\plugins\\ijab\\ijab\\temp",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\avelsieve",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\password",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\ldap_search",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins\\vacation",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\plugins",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es\\program\\lib\\Roundcube",
			"D:\\Proyectos\\remote\\desccobuz05\\correo.juntadeandalucia.es",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"moggy",
			"*",
			"CUSTOM",
			"sprite_18_a",
			"preload",
			"SCRIPT",
			"csrf",
			"decrypt",
			"Aceptar invitaci",
			"favicon",
			"trash",
			"\\r\\n",
			"str_replace",
			"$_SESSION",
			"SESSION",
			"write_log",
			"write_",
			"$_SESSION ['full_mail_address']",
			"rcube_sandetel",
			"$_SESSION ['full_mail_address']",
			"full_mail_address",
			"$rcube_sandetel",
			"full_mail_address",
			"guia",
			"error",
			"makesinglerule",
			"notify",
			"write_action",
			"imap",
			"sqimap",
			"imap_utf7",
			"s",
			"imap",
			"imap_utf7_decode_local",
			"rcube_autoload",
			"rcube_sandetel",
			"utf7",
			"encodeBASE",
			"utf7",
			"SM_PATH",
			"imap_utf7",
			"consigna",
			"task ",
			"mysql",
			"mcrypt",
			"sso",
			"get_input_value",
			"rcube_utils::rcube_utils::get_input_value",
			"get_input_value",
			"get_inpui",
			"get_input_value",
			"Q(",
			"Q",
			"bc.inc",
			"write_log",
			"split",
			"write_log",
			"calendar_caldav",
			"backend",
			"toolbar",
			"dropbuttontip",
			"contextmenu",
			"submenu",
			"token",
			"write_log",
			"vcard_fieldmap",
			"get_record",
			"db_name",
			"get_record",
			"list_groups",
			"loggerinfo",
			"get_group",
			"group_id",
			"set_group_prop",
			"set_group_prop\nset_group_prop",
			"set_group_prop",
			"addresslist_title",
			"list_contacts",
			"listgroup",
			"rcmail_contacts_list_title",
			"addresslisttitle",
			"aria-label-contactslist",
			"custom",
			"group",
			"DoStartsWithRequest",
			"list_records",
			"contains",
			"search",
			"group_id",
			"getVcardListName",
			"getvcardlistname",
			"N component",
			"errorHandler",
			"request",
			"loggerinfo",
			"getVcardListName",
			"gount",
			"write_log",
			"page_size",
			"cache",
			"count ()",
			"error",
			"webdav_connect",
			"check_report_allowed",
			"open",
			"config",
			"passwor",
			"abook_user_url",
			"abook_global",
			"base_url",
			"abook_dir",
			"user_dir",
			"ip_port",
			"protocol",
			"write_log",
			"log",
			"rcmail",
			"filename",
			"addressbook",
			"autocomplete",
			"example_",
			"_save",
			"extract_err",
			"         <usuario xsi:type=\"xsd:string\">GestionLineasRCJA</usuario>\nextract_err",
			"extract_err",
			"assertion",
			"sso",
			"."
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"-",
			"$this->rcube_sandetel->mail",
			"$this->rcube_sandetel",
			"rcube_utils::get_input_value",
			"starts-with",
			"agata_",
			"087021",
			"021908",
			"000",
			"#087021",
			"#021908",
			"#087021",
			"888",
			"444",
			"333333",
			"04320F",
			"020",
			"087021",
			"~",
			"this->rcube_sandetel",
			"`contacts`",
			"rcube::w",
			"RCMAIL::write_log (\"debug\", ",
			"loga (",
			"444",
			"222",
			"consigna",
			"666",
			"777",
			"this->rc->",
			"vacation",
			"c7c7c7",
			"e9e9e9",
			"00a400",
			"01b401",
			"005800",
			"007600",
			"66d966",
			"087021",
			"7,128,33",
			"537253",
			"6a9f6a",
			"85b582",
			"config",
			"F8",
			"DB",
			"$patata",
			"bookmarks",
			"empty",
			"is_empty",
			"bookmarks",
			"BOOKMARK",
			"bookmark",
			"BOOKMARK",
			"bookmark",
			"bookmarkslist",
			"bookmarks",
			"bookmarkslist",
			"bookmarks",
			"bookmarks_list",
			"bookmark",
			"bookmarks_list",
			"bookmark",
			"// Sandetel ---->8----",
			"// Sandetel",
			"bookmarks",
			"bookmark",
			"bookmarks",
			"\\1 [",
			"\\1 (",
			", ",
			"$this->rcmail",
			"\"",
			"¿",
			"ñ",
			"ú",
			"ó",
			"í",
			"é",
			"á",
			"rcube::write_log",
			"rcube::Q(",
			"rcube_utils::get_input_value",
			"max_recipients",
			"this->maxrecipients",
			"config",
			"$this->mail",
			"host",
			"$this->organismo",
			"regenera_preferences",
			"config",
			"í",
			"á",
			"ñ",
			"nuevoOrganismo",
			"if (\"is\".equals (tipo))",
			"throw new",
			"reservadosGuia",
			"altaUidGUIA",
			"rama",
			"et",
			".\\1",
			"scr_upd",
			"mx",
			"chars_8x8",
			"putchar",
			"sd",
			"pd",
			"48",
			"gen2",
			"rdy",
			"rdx",
			"stp16",
			"KeyPressed",
			"3",
			"y",
			"subaco_tile_draw",
			"__FASTCALL__",
			"_sbc",
			"_subaco_draw",
			"_subaco_copy",
			"_subaco_sprite",
			"._\\1",
			"_subaco_line_buffer",
			"_sbc_",
			"_subaco_line_buffer",
			"_sbc_",
			"_subaco_line"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "whatsnew.md",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 63637,
						"regions":
						{
						},
						"selection":
						[
							[
								40,
								40
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/Markdown Extended/Syntaxes/Markdown Extended.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/dev/config.h",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 28359,
						"regions":
						{
						},
						"selection":
						[
							[
								18471,
								18472
							]
						],
						"settings":
						{
							"incomplete_sync": null,
							"remote_loading": false,
							"synced": false,
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 4723.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.sftp":
	{
		"height": 220.0
	},
	"pinned_build_system": "",
	"project": "mk2.sublime-project",
	"replace":
	{
		"height": 74.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"D:\\Proyectos\\remote\\desres01.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 208.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
